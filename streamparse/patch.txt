diff --git README.rst README.rst
index a8fa536..f3c2026 100644
--- README.rst
+++ README.rst
@@ -34,6 +34,7 @@ Alphabetical, by last name:
 -  Keith Bourgoin (`@kbourgoin <https://twitter.com/kbourgoin>`__)
 -  Jeffrey Godwyll (`@rey12rey <https://twitter.com/rey12rey>`__)
 -  Andrew Montalenti (`@amontalenti <https://twitter.com/amontalenti>`__)
+-  Rohit Sankaran (`@roadhead <https://twitter.com/roadhead>`__)
 -  Mike Sukmanowsky (`@msukmanowsky <https://twitter.com/msukmanowsky>`__)

 Roadmap

diff --git streamparse/ext/invoke.py streamparse/ext/invoke.py
index 1595caf..8828164 100644
--- streamparse/ext/invoke.py
+++ streamparse/ext/invoke.py
@@ -65,6 +65,7 @@ def _list_topologies(run_args=None, run_kwargs=None):
         run_args = []
     if run_kwargs is None:
         run_kwargs = {}
+    run_kwargs['pty'] = True
     cmd = ["lein",
            "run -m streamparse.commands.list/-main"]
     return run(" ".join(cmd), *run_args, **run_kwargs)
@@ -84,6 +85,7 @@ def _kill_topology(topology_name, run_args=None, run_kwargs=None):
         run_args = []
     if run_kwargs is None:
         run_kwargs = {}
+    run_kwargs['pty'] = True
     cmd = ["lein",
            "run -m streamparse.commands.kill_topology/-main",
            topology_name]
@@ -140,7 +142,7 @@ def run_local_topology(name=None, time=5, par=2, options=None, debug=False):
     full_cmd = " ".join(cmd)
     print("Running lein command to run local cluster:")
     print(full_cmd)
-    run(full_cmd)
+    run(full_cmd, pty=True)


 @task(pre=["prepare_topology"])
@@ -212,7 +214,7 @@ def submit_topology(name=None, env_name="prod", par=2, options=None,
         full_cmd = " ".join(cmd)
         print("Running lein command to submit topology to nimbus:")
         print(full_cmd)
-        run(full_cmd)
+        run(full_cmd, pty=True)

     tmpfile.close()

@@ -233,5 +235,4 @@ def visualize_topology(name=None, flip=False):
     full_cmd = " ".join(cmd)
     print("Running lein command to visualize topology:")
     print(full_cmd)
-    run(full_cmd)
-
+    run(full_cmd, pty=True)
diff --git streamparse/ext/util.py streamparse/ext/util.py
index 3e0a783..3ae7d9c 100644
--- streamparse/ext/util.py
+++ streamparse/ext/util.py
@@ -67,7 +67,7 @@ def get_env_config(env_name=None):
     """
     config = get_config()
     if env_name is None and len(config["envs"]) == 1:
-        env_name = config["envs"].keys()[0]
+        env_name = list(config["envs"].keys())[0]
     elif env_name is None and len(config["envs"]) > 1:
         die("Found more than one environment in config.json. "
             "When more than one environment exists, you must "
@@ -85,7 +85,7 @@ def get_nimbus_for_env_config(env_config):
     config file.
     """
     if not env_config["nimbus"]:
-        die("No Nimbus server configured for in config.json.")
+        die("No Nimbus server configured in config.json.")

     if ":" in env_config["nimbus"]:
         host, port = env_config["nimbus"].split(":", 1)
diff --git streamparse/ipc.py streamparse/ipc.py
index cd32aa9..2c4fa45 100644
--- streamparse/ipc.py
+++ streamparse/ipc.py
@@ -16,9 +16,6 @@ from collections import deque
 from six import PY3


-config = context = None
-storm_log = logging.getLogger('streamparse')
-
 _MAX_MESSAGE_SIZE = 16777216
 _MAX_BLANK_MSGS = 500
 _MAX_LINES = 100
@@ -161,6 +158,7 @@ def read_tuple():

 def read_handshake():
     """Read and process an initial handshake message from Storm."""
+    storm_log = logging.getLogger('streamparse')
     # Redirect stdout and stderr to ensure that print statements/functions
     # won't crash the Storm Java worker
     sys.stdout = LogStream(logging.getLogger('streamparse.stdout'))
